document.addEventListener("DOMContentLoaded", () => {
    if (document.getElementById("categorySelect")) {
        loadCategoryDropdown();
        loadProductsByCategory(document.getElementById("categorySelect").value);
    }

    if (document.getElementById("productTitle")) {
        loadProductDetails();
    }
});
document.addEventListener("DOMContentLoaded", () => {
    console.log("‚úÖ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠...");
    if (typeof featuredProducts === "undefined") {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö featuredProducts ‡πÉ‡∏ô config.js");
        return;
    }
    loadFeaturedProducts();
});

/* üö¥‚Äç‚ôÇÔ∏è ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠ */
function loadFeaturedProducts() {
    const featuredContainer = document.getElementById("featured-container");
    if (!featuredContainer) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö #featured-container ‡πÉ‡∏ô index.html");
        return;
    }

    let allFeaturedProducts = [];

    // üîÑ ‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å products ‡∏ó‡∏µ‡πà‡∏°‡∏µ `featured: true`
    for (const category in products) {
        const featuredItems = products[category].filter(product => product.featured);
        allFeaturedProducts = allFeaturedProducts.concat(featuredItems.map(p => ({ ...p, category })));
    }

    console.log("üîπ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤:", allFeaturedProducts);

    if (allFeaturedProducts.length === 0) {
        featuredContainer.innerHTML = "<p>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠</p>";
        return;
    }

    // üî• ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
    featuredContainer.innerHTML = allFeaturedProducts.map(product => `
        <div class="product">
            <img src="${product.images[0] || 'https://via.placeholder.com/250'}" alt="${product.name}">
            <h3>${product.name}</h3>
            <p>üí∞ ${product.price.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
            <a href="product.html?category=${product.category}&name=${encodeURIComponent(product.name)}" class="btn">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</a>
        </div>
    `).join('');
}

function toggleFeatured(category, productName) {
    let updatedProducts = { ...products };

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const productIndex = updatedProducts[category].findIndex(p => p.name === productName);
    if (productIndex === -1) return;

    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ featured
    updatedProducts[category][productIndex].featured = !updatedProducts[category][productIndex].featured;

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Local Storage
    localStorage.setItem("products", JSON.stringify(updatedProducts));

    console.log(`üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠: ${productName} ‡πÄ‡∏õ‡πá‡∏ô ${updatedProducts[category][productIndex].featured}`);
    loadFeaturedProducts(); // ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
}


/* üìå ‡πÇ‡∏´‡∏•‡∏î Dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */
function loadCategoryDropdown() {
    const categorySelect = document.getElementById("categorySelect");
    if (!categorySelect) return;

    if (typeof categories === "undefined" || categories.length === 0) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
        return;
    }

    categories.forEach(category => {
        const option = document.createElement("option");
        option.value = category.type;
        option.textContent = category.name;
        categorySelect.appendChild(option);
    });

    // ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    loadProductsByCategory(categorySelect.value);
}

/* üìå ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */
function changeCategory() {
    const selectedCategory = document.getElementById("categorySelect").value;
    loadProductsByCategory(selectedCategory);
}

async function loadProductsFromServer() {
    try {
        const response = await fetch("http://localhost:5000/get-products");
        const products = await response.json();
        return products;
    } catch (error) {
        console.error("‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
        return {};
    }
}
document.addEventListener("DOMContentLoaded", function () {
    const phoneLinks = document.querySelectorAll(".phone-link");

    phoneLinks.forEach(link => {
        link.addEventListener("click", function (event) {
            event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
            const phoneNumber = this.getAttribute("href").replace("tel:", "");
            const confirmCall = confirm(`‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏ó‡∏£‡πÑ‡∏õ‡∏ó‡∏µ‡πà ${phoneNumber} ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`);

            if (confirmCall) {
                window.location.href = `tel:${phoneNumber}`;
            }
        });
    });
});

/* üõí ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */
function loadProductsByCategory(category) {
    const productContainer = document.getElementById("product-container");
    if (!productContainer) return;

    console.log(`üîé ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: ${category}`);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!products[category] || products[category].length === 0) {
        console.warn(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà "${category}"`);
        productContainer.innerHTML = "<p>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ</p>";
        return;
    }

    // ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô HTML
    productContainer.innerHTML = products[category].map(product => `
        <div class="product">
            <img src="${product.images[0] || 'https://via.placeholder.com/250'}" alt="${product.name}">
            <h3>${product.name}</h3>
            <p>üí∞ ${product.price.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
            <a href="product.html?category=${category}&name=${encodeURIComponent(product.name)}" class="btn">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</a>
        </div>
    `).join('');
}


/* üìå ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */
function loadProductDetails() {
    toggleLoading(true);

    const params = new URLSearchParams(window.location.search);
    const category = params.get("category");
    const productName = params.get("name");

    if (!category || !productName || !products[category]) {
        console.error("‚ùå ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        showErrorMessage("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
        return;
    }

    const product = products[category].find(p => p.name === productName);
    if (!product) {
        console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "${productName}" ‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà "${category}"`);
        showErrorMessage("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
        return;
    }

    // üîπ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    document.getElementById("productTitle").textContent = product.name;
    document.getElementById("productPrice").textContent = `üí∞ ${product.price.toLocaleString()} ‡∏ö‡∏≤‡∏ó`;
    document.getElementById("productDescription").textContent = product.description;

    const productImage = document.getElementById("productImage");
    productImage.src = product.images[0] || "https://via.placeholder.com/500x300?text=No+Image";
    productImage.onerror = () => productImage.src = "https://via.placeholder.com/500x300?text=No+Image";

    // üî• ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ
    if (product.colors && product.colors.length > 0) {
        setupColorSelection(product);
    } else {
        document.getElementById("colorOptions").innerHTML = "<p>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ</p>";
    }

    console.log("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", product);
    toggleLoading(false);
}




function changeColor(selectedColor) {
    const productImage = document.getElementById("productImage");
    const productTitle = document.getElementById("productTitle");
    const productPrice = document.getElementById("productPrice");
    const productDescription = document.getElementById("productDescription");

    const params = new URLSearchParams(window.location.search);
    const category = params.get("category");
    const productName = params.get("name");

    if (!category || !productName || !products[category]) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
        return;
    }

    const product = products[category].find(p => p.name === productName);
    if (!product || !product.colorDetails || !product.colorDetails[selectedColor]) {
        console.warn(`‚ö†Ô∏è ‡∏™‡∏µ "${selectedColor}" ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ`);
        return;
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    productImage.src = product.colorDetails[selectedColor].image || product.images[0];

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    productTitle.textContent = product.colorDetails[selectedColor].name || product.name;
    productPrice.textContent = `üí∞ ${product.colorDetails[selectedColor].price.toLocaleString()} ‡∏ö‡∏≤‡∏ó`;
    productDescription.textContent = product.colorDetails[selectedColor].description || product.description;

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    document.querySelectorAll(".color-box").forEach(box => box.classList.remove("selected"));
    document.querySelector(`[data-color='${selectedColor}']`)?.classList.add("selected");
}




/* üìå ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ */
function setupColorSelection(product) {
    const colorOptions = document.getElementById("colorOptions");
    if (!colorOptions) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö #colorOptions ‡πÉ‡∏ô product.html");
        return;
    }

    if (!product.colors || product.colors.length === 0) {
        console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ");
        colorOptions.innerHTML = "<p>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ</p>";
        return;
    }

    colorOptions.innerHTML = product.colors.map(color => `
        <button class="color-box" data-color="${color}" 
                style="background-color: ${colorToHex(color)};" 
                onclick="changeColor('${color}')">${color}</button>
    `).join('');
}




/* üîò ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏ó‡πá‡∏ö */
function openTab(event, tabName) {
    const tabContents = document.querySelectorAll(".tab-content");
    const tabButtons = document.querySelectorAll(".tab-button");

    tabContents.forEach(tab => tab.classList.remove("active"));
    tabButtons.forEach(button => button.classList.remove("active"));

    document.getElementById(tabName).classList.add("active");
    event.currentTarget.classList.add("active");
}

/* üîÑ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° `Loading Screen` */
function toggleLoading(show) {
    const loadingScreen = document.getElementById("loading-screen");
    if (!loadingScreen) return;
    loadingScreen.style.display = show ? "block" : "none";
}

/* üîô ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */
function goBack() {
    window.history.back();
}

/* üé® ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏µ‡πÄ‡∏õ‡πá‡∏ô HEX */
function colorToHex(color) {
    const colorMap = {
        "‡πÅ‡∏î‡∏á": "#FF0000", "‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô": "#0000FF", "‡∏î‡∏≥": "#000000",
        "‡∏Ç‡∏≤‡∏ß": "#FFFFFF", "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß": "#008000", "‡πÄ‡∏ó‡∏≤": "#808080"
    };
    return colorMap[color] || color;
}
